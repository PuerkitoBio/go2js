/* Generated by GoScript <github.com/kless/GoScript> */















var g = {}; (function() {


function Export(pkg, exported) {
	var v; for (_ in exported) { v = exported[_];
		pkg.v = v;
	}
}





function Slice(array, elts, low, high, len, cap, isNil) {
	this.array=array;
	this.elts=elts;

	this.low=low;
	this.high=high;
	this.len=len;
	this.cap=cap;

	this.isNil=isNil;
}



function NilSlice() {
	var s = new Slice(undefined, [], 0, 0, 0, 0, false);
	s.isNil = true;
	s.len = 0, s.cap = 0;
	return s;
}




function MakeSlice(zero, len, cap) {
	var s = new Slice(undefined, [], 0, 0, 0, 0, false);
	s.len = len;

	for (var i = 0; i < len; i++) {
		s.elts[i] = zero;
	}

	if (cap !== undefined) {
		s.cap = cap;
	} else {
		s.cap = len;
	}

	return s;
}


function NewSlice(elts) {
	var s = new Slice(undefined, [], 0, 0, 0, 0, false);
	s.elts = elts;
	s.len = elts.length;
	s.cap = s.len;
	return s;
}


function NewSliceFrom(a, low, high) {
	var s = new Slice(undefined, [], 0, 0, 0, 0, false);
	s.array = a;
	s.low = low;
	s.high = high;
	s.len = high - low;
	s.cap = a.cap - low;
	return s;
}




Slice.prototype.get = function() {
	if (this.elts.length !== 0) {
		return this.elts;
	}

	return this.array.slice(this.low, this.high);
}


Slice.prototype.str = function() {
	var _s = this.get();
	return _s.join("");
}
















































function Map(f, zero) {
	this.f=f;
	this.zero=zero;

}




Map.prototype.get = function(k) {
	var v = this.f;


	for (var i = 0; i < arguments.length; i++) {
		v = v[arguments[i]];
	}

	if (v === undefined) {
		return [this.zero, false];
	}
	return [v, true];
}

g.Export = Export;
g.Slice = Slice;
g.NilSlice = NilSlice;
g.MakeSlice = MakeSlice;
g.NewSlice = NewSlice;
g.NewSliceFrom = NewSliceFrom;
g.Map = Map;

})();
