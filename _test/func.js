/* Generated by GoScript <github.com/kless/GoScript> */






var x = 10;

(function() {
	x = 13;
}());

function testInit() {
	var code = "";
	if (x === 13) {
		code = "OK";
	} else {
		code = "Error";
	}
	document.write("[" + code + "]<br>");
}

function singleLine() { document.write("[OK]<br>"); }

function simpleFunc() {

	var max = function(a, b) {
		if (a > b) {
			return a;
		}
		return b;
	};

	var x = 3;
	var y = 4;
	var z = 5;

	var max_xy = max(x, y);

	if (max_xy === 4) {
		document.write("[OK] x,y<br>");
	} else {
		document.write("[Error] max(" + x + ", " + y + ") = " + max_xy + "<br>");
	}


	var max_xz = max(x, z);

	if (max_xz === 5) {
		document.write("[OK] x,z<br>");
	} else {
		document.write("[Error] max(" + x + ", " + z + ") = " + max_xz + "<br>");
	}



	if (max(y, z) === 5) {
		document.write("[OK] y,z<br>");
	} else {
		document.write("[Error] max(" + y + ", " + z + ") = " + max(y, z) + "<br>");
	}

}

function twoOuputValues() {

	var SumAndProduct = function(A, B) {
		return [A + B, A * B];
	};

	var x = 3;
	var y = 4;
	var _ = SumAndProduct(x, y), xPLUSy = _[0], xTIMESy = _[1];


	if (xPLUSy === 7 && xTIMESy === 12) {
		document.write("[OK]<br>");
	} else {
		document.write("[Error] " + x + " + " + y + " = " + xPLUSy + "\t");
		document.write("" + x + " * " + y + " = " + xTIMESy + "<br>");
	}

}

function resultVariable() {


	var MySqrt = function(f) { var s = 0, ok = false;
		if (f > 0) {
			s = Math.sqrt(f), ok = true;
		}
		return [s, ok];
	};

	var results = g.Map(0, {
		1: 1,
		2: 1.4142135623730951,
		3: 1.7320508075688772,
		4: 2,
		5: 2.23606797749979,
		6: 2.449489742783178,
		7: 2.6457513110645907,
		8: 2.8284271247461903,
		9: 3,
		10: 3.1622776601683795
	});

	var err = false;
	for (var i = -2.0; i <= 10; i++) {
		var _ = MySqrt(i), sqroot = _[0], ok = _[1];
		if (ok) {
			if (JSON.stringify(sqroot) !== JSON.stringify(results.get(i)[0])) {
				document.write("[Error] The square root of " + i + " is " + sqroot + "<br>");
				err = true;
			}
		} else {
			if (i !== -2.0 && i !== -1.0 && i !== 0) {
				document.write("[Error] The square root for " + i + " should not be run<br>");
				err = true;
			}
		}
	}
	if (!err) {
		document.write("[OK]<br>");
	}
}

function testReturn() {
	var MySqrt = function(f) { var squareroot = 0, ok = false;
		if (f > 0) {
			squareroot = Math.sqrt(f), ok = true;
		}
		return [squareroot, ok];
	};

	var check = MySqrt(5)[1];


	var code = "";
	if (check) {
		code = "OK";
	} else {
		code = "Error";
	}
	document.write("[" + code + "]<br>");

	var ok = MySqrt(0)[1]; if (!ok) {
		code = "OK";
	} else {
		code = "Error";
	}
	document.write("[" + code + "]<br>");

}

function testPanic() {
	throw new Error("unreachable");
	throw new Error("not implemented: " + "foo" + "");
}

function main() {
	document.write("<br>== testInit<br>");
	testInit();
	document.write("<br>== singleLine<br>");
	singleLine();
	document.write("<br>== simpleFunc<br>");
	simpleFunc();
	document.write("<br>== twoOuputValues<br>");
	twoOuputValues();
	document.write("<br>== resultVariable<br>");
	resultVariable();
	document.write("<br>== testReturn<br>");
	testReturn();
	document.write("<br>== testPanic<br>");
	testPanic();
} main();
